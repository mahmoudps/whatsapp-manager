version: '3.8'

services:
  whatsapp-manager:
    build: .
    container_name: whatsapp-manager
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:3000"
      - "127.0.0.1:3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/data/whatsapp_manager.db
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - JWT_SECRET=${JWT_SECRET}
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
      - MAX_AUTH_ATTEMPTS=${MAX_AUTH_ATTEMPTS:-5}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - ENABLE_WEBSOCKET=${ENABLE_WEBSOCKET:-true}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT:-3001}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - NEXT_PUBLIC_DOMAIN_NAME=${NEXT_PUBLIC_DOMAIN_NAME}
      - NEXT_PUBLIC_WHATSAPP_API_URL=${NEXT_PUBLIC_WHATSAPP_API_URL}
      - FRONTEND_URL=${FRONTEND_URL}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - /dev/shm:/dev/shm
    networks:
      - whatsapp-network
    healthcheck:
      disable: true

  nginx:
    image: nginx:alpine
    container_name: whatsapp-manager-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/letsencrypt
      - ./certbot-webroot:/var/www/certbot
    depends_on:
      - whatsapp-manager
    networks:
      - whatsapp-network

  redis:
    image: redis:7-alpine
    container_name: whatsapp-manager-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-whatsapp123}
    volumes:
      - redis_data:/data
    networks:
      - whatsapp-network

networks:
  whatsapp-network:
    driver: bridge

volumes:
  redis_data:
