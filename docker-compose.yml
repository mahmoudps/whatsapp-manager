version: '3.8'

services:
  whatsapp-manager:
    build: 
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: whatsapp-manager-app
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
      - "${WEBSOCKET_PORT:-3001}:3001"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - WEBSOCKET_PORT=3001
      - DATABASE_PATH=/app/data/whatsapp_manager.db
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
      - PUPPETEER_ARGS=--no-sandbox,--disable-setuid-sandbox,--disable-dev-shm-usage,--disable-accelerated-2d-canvas,--no-first-run,--no-zygote,--disable-gpu
      - JWT_SECRET=${JWT_SECRET:-whatsapp-manager-super-secret-jwt-key-2024}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
    volumes:
      - whatsapp_data:/app/data
      - whatsapp_logs:/app/logs
      - /dev/shm:/dev/shm
    networks:
      - whatsapp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID

  nginx:
    image: nginx:alpine
    container_name: whatsapp-manager-nginx
    restart: unless-stopped
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx-ssl.conf:/etc/nginx/nginx.conf:ro
      - nginx_cache:/var/cache/nginx
      - nginx_logs:/var/log/nginx
    depends_on:
      whatsapp-manager:
        condition: service_healthy
    networks:
      - whatsapp-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.1'
    security_opt:
      - no-new-privileges:true

  # Optional: Redis for session management and caching
  redis:
    image: redis:7-alpine
    container_name: whatsapp-manager-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-whatsapp123}
    volumes:
      - redis_data:/data
    networks:
      - whatsapp-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.1'
    security_opt:
      - no-new-privileges:true

networks:
  whatsapp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  whatsapp_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  whatsapp_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs
  nginx_cache:
  nginx_logs:
  redis_data:

